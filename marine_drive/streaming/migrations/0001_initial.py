# Generated by Django 4.2.24 on 2025-09-15 18:36

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('detection', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LiveStream',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stream_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('stream_url', models.URLField(blank=True, max_length=500)),
                ('websocket_url', models.URLField(blank=True, max_length=500)),
                ('access_token', models.CharField(blank=True, max_length=255)),
                ('viewer_count', models.IntegerField(default=0)),
                ('max_viewers', models.IntegerField(default=0)),
                ('current_bitrate', models.IntegerField(default=0)),
                ('frame_drops', models.IntegerField(default=0)),
                ('latency_ms', models.IntegerField(default=0)),
                ('real_time_detections_enabled', models.BooleanField(default=True)),
                ('last_detection_broadcast', models.DateTimeField(blank=True, null=True)),
                ('is_recording', models.BooleanField(default=False)),
                ('recording_file_path', models.CharField(blank=True, max_length=500)),
                ('recording_size_mb', models.FloatField(default=0.0)),
            ],
            options={
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='StreamViewer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('viewer_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('connection_type', models.CharField(choices=[('web', 'Web Browser'), ('mobile', 'Mobile App'), ('api', 'API Client'), ('embed', 'Embedded Player')], default='web', max_length=20)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('left_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('connection_quality', models.CharField(choices=[('excellent', 'Excellent'), ('good', 'Good'), ('fair', 'Fair'), ('poor', 'Poor')], default='good', max_length=20)),
                ('buffering_events', models.IntegerField(default=0)),
                ('total_buffering_time_ms', models.IntegerField(default=0)),
                ('chat_messages_sent', models.IntegerField(default=0)),
                ('reactions_sent', models.IntegerField(default=0)),
                ('stream', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='viewers', to='streaming.livestream')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stream_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-joined_at'],
                'unique_together': {('stream', 'user', 'ip_address')},
            },
        ),
        migrations.CreateModel(
            name='StreamRecording',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recording_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('filename', models.CharField(max_length=255)),
                ('file_path', models.CharField(max_length=500)),
                ('file_size_mb', models.FloatField(default=0.0)),
                ('duration_minutes', models.FloatField(default=0.0)),
                ('resolution_width', models.IntegerField(default=0)),
                ('resolution_height', models.IntegerField(default=0)),
                ('fps', models.IntegerField(default=0)),
                ('codec', models.CharField(default='H264', max_length=20)),
                ('recording_started', models.DateTimeField()),
                ('recording_ended', models.DateTimeField()),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('processing_status', models.CharField(choices=[('raw', 'Raw Recording'), ('processing', 'Processing'), ('processed', 'Processed'), ('failed', 'Processing Failed'), ('archived', 'Archived')], default='raw', max_length=20)),
                ('detection_highlights', models.JSONField(default=list, help_text='Timestamps of significant detections')),
                ('organism_summary', models.JSONField(default=dict, help_text='Summary of organisms detected')),
                ('description', models.TextField(blank=True)),
                ('tags', models.JSONField(default=list)),
                ('is_public', models.BooleanField(default=False)),
                ('download_count', models.IntegerField(default=0)),
                ('last_accessed', models.DateTimeField(blank=True, null=True)),
                ('stream', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recordings', to='streaming.livestream')),
            ],
            options={
                'ordering': ['-recording_started'],
            },
        ),
        migrations.CreateModel(
            name='StreamingConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('config_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(help_text='Configuration name', max_length=100)),
                ('resolution_width', models.IntegerField(default=1920)),
                ('resolution_height', models.IntegerField(default=1080)),
                ('fps', models.IntegerField(default=30, help_text='Frames per second')),
                ('bitrate', models.IntegerField(default=2000, help_text='Bitrate in kbps')),
                ('codec', models.CharField(default='H264', max_length=20)),
                ('protocol', models.CharField(choices=[('webrtc', 'WebRTC'), ('mjpeg', 'MJPEG'), ('rtmp', 'RTMP'), ('hls', 'HLS')], default='webrtc', max_length=20)),
                ('enable_real_time_detection', models.BooleanField(default=True)),
                ('detection_interval_ms', models.IntegerField(default=1000, help_text='Detection interval in milliseconds')),
                ('overlay_detections', models.BooleanField(default=True)),
                ('show_confidence_scores', models.BooleanField(default=True)),
                ('auto_adjust_quality', models.BooleanField(default=True)),
                ('min_bitrate', models.IntegerField(default=500, help_text='Minimum bitrate in kbps')),
                ('max_bitrate', models.IntegerField(default=5000, help_text='Maximum bitrate in kbps')),
                ('buffer_size_frames', models.IntegerField(default=30)),
                ('latency_mode', models.CharField(choices=[('ultra_low', 'Ultra Low Latency'), ('low', 'Low Latency'), ('normal', 'Normal'), ('high_quality', 'High Quality')], default='low', max_length=20)),
                ('is_default', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='streaming_configs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='livestream',
            name='configuration',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='live_streams', to='streaming.streamingconfiguration'),
        ),
        migrations.AddField(
            model_name='livestream',
            name='session',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='live_stream', to='detection.detectionsession'),
        ),
        migrations.CreateModel(
            name='StreamQualityMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recorded_at', models.DateTimeField(auto_now_add=True)),
                ('bitrate_kbps', models.IntegerField(default=0)),
                ('fps_actual', models.FloatField(default=0.0)),
                ('frame_drops', models.IntegerField(default=0)),
                ('resolution_width', models.IntegerField(default=0)),
                ('resolution_height', models.IntegerField(default=0)),
                ('latency_ms', models.IntegerField(default=0)),
                ('packet_loss_percent', models.FloatField(default=0.0)),
                ('jitter_ms', models.IntegerField(default=0)),
                ('cpu_usage_percent', models.FloatField(default=0.0)),
                ('memory_usage_mb', models.FloatField(default=0.0)),
                ('bandwidth_usage_mbps', models.FloatField(default=0.0)),
                ('video_quality_score', models.IntegerField(default=100)),
                ('audio_quality_score', models.IntegerField(default=100)),
                ('overall_quality_score', models.IntegerField(default=100)),
                ('stream', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quality_metrics', to='streaming.livestream')),
            ],
            options={
                'ordering': ['-recorded_at'],
                'indexes': [models.Index(fields=['stream', '-recorded_at'], name='streaming_s_stream__dc3b6d_idx')],
            },
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('message', models.TextField(max_length=500)),
                ('message_type', models.CharField(choices=[('chat', 'Chat Message'), ('question', 'Question'), ('alert', 'Alert'), ('system', 'System Message')], default='chat', max_length=20)),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('is_visible', models.BooleanField(default=True)),
                ('is_flagged', models.BooleanField(default=False)),
                ('likes', models.IntegerField(default=0)),
                ('reactions', models.JSONField(default=dict)),
                ('moderated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='moderated_messages', to=settings.AUTH_USER_MODEL)),
                ('stream', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_messages', to='streaming.livestream')),
                ('viewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_messages', to='streaming.streamviewer')),
            ],
            options={
                'ordering': ['sent_at'],
                'indexes': [models.Index(fields=['stream', 'sent_at'], name='streaming_c_stream__1b4156_idx')],
            },
        ),
    ]
